 EMERALD’S KILLFEED — PHASE 0: PROJECT INITIALIZATION (TARBALL EDITION)

🧩 TASK TYPE: SINGLE TASK

This is a fully atomic initialization operation. You must treat all steps as one complete task.
Do not checkpoint, commit, or output until the bot is confirmed to be running with all cogs and slash commands registered.


---

🔧 OBJECTIVE

Prepare the Emerald’s Killfeed bot project for debugging and production. This includes:

Unpacking the project

Cleaning up its structure

Loading Replit secrets

Starting the bot

Verifying full functionality at startup



---

📂 REQUIRED INPUT

A .tar.gz file is provided in attached_assets

Secrets are configured via Replit environment



---

🔁 STEP-BY-STEP INSTRUCTIONS

1. Unpack the Project

Locate the .tar.gz file in attached_assets

Extract all contents into the root project directory

Move inner folders if the archive extracted into a subfolder



2. Clean Directory Structure

Remove duplicate folders such as project/, src/, or DeadsideBot/ if they cause nesting

Delete empty folders or broken symbolic links



3. Log Structural Overview

Detect and log the locations of:

Main entry point (bot startup script)

All cog folders

Config files (config.json, .env, settings.py, etc.)

Command, parser, and event systems

Any file naming inconsistencies or legacy module conflicts




4. Environment Preparation

Confirm presence of .env, .replit, or config

Ensure the following Replit secrets are loaded:

BOT_TOKEN

MONGO_URI




5. Startup Verification

Launch the bot using the Replit green "Run" button or proper startup command

Confirm that:

No runtime or syntax errors occur

All 11 cogs load successfully

All slash commands are synced to Discord (confirm with logs or /commands)

Bot connects to Discord and MongoDB






---

✅ COMPLETION CRITERIA

[ ] Bot directory is flattened and cleaned

[ ] All secrets are detected and parsed

[ ] Bot starts successfully without errors

[ ] All cogs are loaded and registered

[ ] Slash commands are verified synced and functional

[ ] Ready for Phase 1 or further repair tasks



---

🧷 RULES & CONSTRAINTS

🚫 No checkpoints, commits, or outputs before task is complete

🔁 Do not use trial and error — validate structure and readiness

✅ Confirm all progress via logs and Replit output

📦 Proceed to next phase only when bot is production-ready